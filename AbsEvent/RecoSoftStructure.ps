%!PS-Adobe-3.0
%%Title: (RecoSoftStructure.doc)
%%Creator: (FrameMaker: LaserWriter 8 8.1.1)
%%CreationDate: (6:59 PM Sunday, October 29, 1995)
%%For: (Bob Jacobsen)
%%Pages: 5
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier Symbol Helvetica
%%DocumentNeededFonts: Times-Roman Times-Bold Times-Italic Courier Symbol Helvetica
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -8 -18 784 594
%ADO_ImageableArea: 0 0 776 576
%%EndComments
/md 160 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Bob Jacobsen)setjob
/pT[1 0 0 -1 18 784]def/mT[1 0 0 -1 18 784]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
%%IncludeFont: Symbol
%%IncludeFont: Helvetica
/f0_1/Times-Roman :mre
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f1_1/Times-Bold :mre
/f1_18 f1_1 18 scf
/f1_14 f1_1 14 scf
/f2_1/Times-Italic :mre
/f2_12 f2_1 12 scf
/f3_1/Courier :mre
/f3_10 f3_1 10 scf
/f4_1/Symbol :bsr
240/apple pd
:esr /f4_12 f4_1 12 scf
/f5_1/Helvetica :mre
/f5_80 f5_1 80 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 4.0.2
% Copyright (c) 1986-94 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 402 17
userdict/FrameMacDict 200 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fM5/fM6
/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMFl/fMGC/fMGL/fMGM/fMIx
/fMJB/fMJC/fMJG/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC
/fMPH/fMPt/fMRC/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMat/fMa2/fMi/fMk/fms/fmBS/fMdp
/freq/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/FmBD{bind def}bind def/fmBx{[
exch{dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD/fmPU{userdict 3 1 roll fmBi put}bind def/T true def/F false def
userdict/fMSuccessfull F put userdict/fMSi F put userdict/fM7 known not{
userdict/fM7 0 put}if/fmXD{exch def}FmBD/FmG/gsave load def/FmR/grestore load
def/fm_l/grestoreall load def/fm_v/save load def/fm_g/setgray load def/fm_r
/setrgbcolor load def/fm_h/sethsbcolor load def/fm_f/fill load def/fm_e/eofill
load def/fm_t/stroke load def/fm_m/imagemask load def/fm_i/image load def/fm_s
/show load def/fm_a/ashow load def/fm_w/widthshow load def/fm_y/awidthshow load
def/fm_k/kshow load def/fMat matrix def/fMa2 matrix def/fmSM{fMat currentmatrix
pop}FmBD/fmRM{fMat setmatrix}FmBD/FmRF{currentpoint 2 copy translate 4 2 roll{
-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2 copy lt{exch}if
pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark known{/FmPD/pdfmark
load def/FmPT/fm_s load def}{/FmPD/cleartomark load def/FmPT/pop load def}
ifelse/FmDC{transform fMat defaultmatrix itransform cvi exch cvi exch}FmBD/fmgS
32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS fMgt get dup null eq{pop fmgS fMgt
10 dict dup 4 1 roll put}if 3 1 roll put}FmBD/fmGG{fMgt -1 -1{fmgS exch get dup
null ne{2 copy exch known{2 copy exch get/_notdef ne{exch get dup exit}if}if}if
pop}for pop}FmBD/gsave{FrameMacDict begin FmG/fMgt fMgt 1 add def fmgS fMgt get
dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse end}fmPU
/grestore{FrameMacDict begin fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN
end}fmPU/grestoreall{FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPU
/save{FrameMacDict/fm_v get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS
fMgt get dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse
/fMtp fMgt def end}fmPU/fMND F def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{
1 exch sub 3 1 roll 1 exch sub 3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{
pop}{exch pop}ifelse 2 copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1
roll 7 1 roll sub 6 1 roll sub 5 1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get
T}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch
/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get
mtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1
roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{
exec}ifelse}FmBD/fmdl{3 index 16 and 0 ne{FmG currentlinewidth 2. div dup
rmoveto currentpoint newpath moveto 2 index 0 rlineto fm_t FmR}if 3 index 24
and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{1 currentgray sub
setgray}{1 setgray}ifelse 2 index 0 rlineto fm_t FmR FmG 2 index 0 rlineto
strokepath .24 setlinewidth fm_t FmR}{2 index 0 rlineto fm_t 0 0 moveto}ifelse}
FmBD/FmUl{FmG/fM2 fmXD currentpoint/UnderlineThickness{fM2 15 div}fmfp abs dup
setlinewidth/fM1 fmXD 4 index 1 and 0 ne{newpath 2 copy moveto 0
/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto fmdl}if 4 index 2 and 0 ne{
newpath 2 copy moveto 0/XHeight{FmG newpath 0 0 moveto(x)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 2. mul 3. div neg}if}fmfp
2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath 2 copy moveto 0/CapHeight{FmG
newpath 0 0 moveto(H)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR
dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp fM1 sub rmoveto fmdl}if pop pop pop
pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth pop
fM2 sub fM3 length div sub 0 fM3 fm_y}FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3
def/fMK 4 def/fMS 5 def/fMNg 0 currenttransfer exec .5 gt def/fMCM fMN def/fMJK
0 def/fMJY 0 def/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1
def/fMPt null def/fMCK[0 0 0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{
/HalftoneType 2 def currentcolorscreen[/GraySpotFunction/GrayAngle
/GrayFrequency/BlueSpotFunction/BlueAngle/BlueFrequency/GreenSpotFunction
/GreenAngle/GreenFrequency/RedSpotFunction/RedAngle/RedFrequency]{exch def}
forall}{/HalftoneType 1 def currentscreen[/SpotFunction/Angle/Frequency]{exch
def}forall}ifelse statusdict/checkscreen known{statusdict/accuratescreens get
exec}{F}ifelse/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{
fML1{begin statusdict/checkscreen known{currentdict/AccurateScreens known{
AccurateScreens}{F}ifelse statusdict/setaccuratescreens get exec}if
HalftoneType 1 eq{Frequency Angle currentdict/SpotFunction get setscreen}{
HalftoneType 2 eq{fMCl{RedFrequency RedAngle currentdict/RedSpotFunction get
GreenFrequency GreenAngle currentdict/GreenSpotFunction get BlueFrequency
BlueAngle currentdict/BlueSpotFunction get GrayFrequency GrayAngle currentdict
/GraySpotFunction get setcolorscreen}{GrayFrequency GrayAngle currentdict
/GraySpotFunction get setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD
/FmCS{14 dict begin/HalftoneType 2 def/AccurateScreens exch def
/GraySpotFunction exch def/GrayAngle exch def/GrayFrequency exch def
/BlueSpotFunction exch def/BlueAngle exch def/BlueFrequency exch def
/GreenSpotFunction exch def/GreenAngle exch def/GreenFrequency exch def
/RedSpotFunction exch def/RedAngle exch def/RedFrequency exch def currentdict
dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict begin/HalftoneType 1 def
/AccurateScreens exch def/SpotFunction exch def/Angle exch def/Frequency exch
def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH fmCH def/fmcp{/FmPr2 exch
cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length FmPr2 length add array def
FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2 putinterval FmPrn cvx}FmBD
/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0 get exch 0 get fmEp{2 copy
1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3 get exch 3 get fmEp}{pop
pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2 copy 4 get exch 0
get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2 get fmEp}{pop pop F}ifelse}{
pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD/fMJG fmXD/fMJR fmXD/fMJK fmXD
/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{/fMCM fmXD fmCC}FmBD
/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]/fMSC exch def end}fmBi
def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll eq{exch pop T exit}{pop}
ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM fMN ne{/fMOP fmGG{/fMKO
fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup null ne{exch pop dup
type dup/integertype eq exch/realtype eq or{fm_g}{setcolor}ifelse}{pop{1 fm_g}
if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}{fm_f}ifelse end}
fmPU/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}fmPU/stroke{
FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPU/imagemask{FrameMacDict
begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPU/show{FrameMacDict
begin fMND{stringwidth rmoveto}{fm_s}ifelse end}fmPU/fmNX{load fMND{FmG fMa2
currentmatrix end nulldevice setmatrix exec currentpoint FrameMacDict/FmR get
exec moveto}{end exec}ifelse}fmBi def/ashow{FrameMacDict begin/fm_a fmNX}fmPU
/widthshow{FrameMacDict begin/fm_w fmNX}fmPU/awidthshow{FrameMacDict begin/fm_y
fmNX}fmPU/kshow{FrameMacDict begin/RealKshow fmNX}fmPU/image{FrameMacDict begin
fMCM fMN ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}
ifelse settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}
fmPU/fMGM T def/fMBM F def/setcustomcolor where{pop}{/findcmykcustomcolor{0 0 0
4 -1 roll 8 array astore}fmPU/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3
copy/fmRY fmGG exec 8 4 roll 4 -1 roll 8 array astore end}fmPU
/findgraycustomcolor{0 0 0 exch 1 exch sub exch findcmykcustomcolor}fmPU
/findhsbcustomcolor{FrameMacDict begin 4 1 roll gsave fm_h currentrgbcolor
grestore 4 -1 roll findrgbcustomcolor end}fmPU/setcustomcolor{FrameMacDict
begin dup type dup/integertype eq exch/realtype eq or not{1.0}if exch dup/fMCC
exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval aload pop 4{4 index mul 4 1
roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}if fmLM{exch pop 0 4
getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and
exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1 T}ifelse}{fMCM
fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM fMC eq{0 get F}{
pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub exch}ifelse/fMKO
exch fmSG fmCN}ifelse end}fmPU/setoverprint{FrameMacDict begin/fMOP exch fmSG
null fmCN end}fmPU/currentoverprint{FrameMacDict begin/fMOP fmGG end}fmPU}
ifelse/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]setcolorspace
fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{fMCG fm_g}{fMCl
fMGM and{0 1 3{fMCK exch get 1 fMCG sub mul}for fmSK}{4 1 6{fMCK exch get fMGM{
1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{fMCG}{1}ifelse}ifelse}for fm_r}
ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG F}{fMCK 0 4 getinterval aload
fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq and{
fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{fMCG 1.0 exch sub
mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop fMCG 1.0 exch sub mul
1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop fMCG 1.0 exch sub mul 1.0
exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG 1.0 exch sub mul 1.0 exch sub
F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG
fMGM fML1 or not{[/Pattern[/DeviceGray]]setcolorspace fMPt}{fMGM not fML1 and{
dup 1 lt{pop fMCG}if}if}ifelse}ifelse fmCN}FmBD/setgray{FrameMacDict begin fMCM
fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{
F}{pop 1 T}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPU/setrgbcolor{
FrameMacDict begin/fMBM F def fMCM fMN eq{fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS
eq{fMJB eq exch fMJG eq and exch fMJR eq and{0 F}{1 T}ifelse}{pop pop pop 1 T}
ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCM
fMY eq{pop 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch sub
exch pop F}{fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}
ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/sethsbcolor{
FrameMacDict begin fMCM fMN eq{fm_h}{fm_h currentrgbcolor setrgbcolor}ifelse
end}fmPU/setcmykcolor where{pop/fmSK/setcmykcolor load def}{/fmSK{4 1 roll 3{3
index add 0 fmax 1 fmin 1 exch sub 3 1 roll}repeat fm_r pop}FmBD}ifelse
/currentcmykcolor where{pop}{/currentcmykcolor{FrameMacDict begin
currentrgbcolor/fmRY fmGG exec end}fmPU}ifelse/setcmykcolor{FrameMacDict begin
/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1 roll]fmLC{fMCM fMS eq{fMJK eq exch
fMJY eq and exch fMJM eq and exch fMJC eq and{0 F}{1 T}ifelse}{pop pop pop pop
1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop
1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{
fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/fMFl[0 .1 .3 .5 .7 .9
.97 1<0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><
8142241818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7
dict dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c
1e>[135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff
0000ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}
dup .75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<804020
1008040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<
0f87c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMat defaultmatrix
dtransform dup mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0
eq{pop 1}if 8 mul div def/sangle 1 0 fMat defaultmatrix dtransform exch atan
def sangle fMa2 rotate fMat fMa2 concatmatrix dup 0 get/sflipx exch def 3 get
/sflipy exch def fML1{/fmgF{fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM
fML1{{dup patScreenDict exch known{patScreenDict exch get aload pop freq mul 5
2 roll fMa2 currentmatrix 1 get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF
sflipy 2 fmgF mul}{sflipx 0 fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{
pop}ifelse fMNg{{neg}fmcp}if bind systemdict/setscreen get exec}{/fmBS fmXD
/fM1B 0 def/fM0B 0 def freq 0 fMa2 currentmatrix 1 get 0 ne{90 add/pflipx
sflipx 1 fmgF def/pflipy sflipy 2 fmgF def}{/pflipx sflipx 0 fmgF def/pflipy
sflipy 3 fmgF neg def}ifelse{pflipy mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1
add 2 div 8 mul cvi def/yindex yy 1 add 2 div 8 mul cvi def fmBS yindex xindex
8 idiv add get 1 7 xindex 8 mod sub bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1
add def 1}{/fM0B fM0B 1 add def 0}ifelse}setscreen fM0B fM0B fM1B add div fMNg{
1.0 exch sub}if}ifelse/fMCG exch def/fMGM F def fmCC}}{/fMPC 8 dict def{dup
fMPC exch known{fMPC exch get}{dup fMPD/fmBS 3 -1 roll put fMPD matrix
makepattern dup fMPC 4 -1 roll 3 -1 roll put}ifelse/fMCG 0 def/fMPt exch def
/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{/fMGM T def fML1{fMPH fmSH}if}if
/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup type/stringtype eq{fmPM}{fmgr}
ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}FmBD/FmFB{0 0 0 1 0 0 0 fMCK
astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx matrix def fMOx currentmatrix
pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD/FmIO{fmRM}FmBD/FmEO{FmOs
restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}bind{.11 mul add round cvi
fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def/fm31{/fMi 0 def 0 exch 0
exch{exch fm3R exch get exec}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD fML1{
/fmAn{transform round .5 sub exch round .5 sub exch itransform}FmBD/fmAc{
transform round 1.5 sub exch round 1.5 sub exch itransform}FmBD/fmDn{dtransform
round exch round exch idtransform}FmBD/fmLn{0 dtransform exch cvi 2 idiv 2 mul
.1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn 6 2 roll fmDn 6 2 roll
rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD/fmDn{}FmBD/fmLn{}FmBD
/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}FmBD/N{0 rmoveto}FmBD
/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD/X{0 exch 0 32 5 2
roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR}if exec}FmBD/FmB{
newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}FmBD/FmSo{fmLn
setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn setlinewidth
closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth setlinecap{closepath
}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{fm_e}fmQP FmR}FmBD
/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto neg 0
rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP 0 0 moveto}FmBD
/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5 1 roll}{T 7 3
roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{currentpoint}
stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG newpath fmAn
translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3 roll arc
closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth setlinecap
fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2 index 2 div
sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0 5 3 roll
exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate .3 fmLn
setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0
fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10 rotate}
repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0 setlinecap 0
setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn neg .1{0 0 3
-1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict/FrameEr(\000)
put}ifelse/fMSJ 100 string def/fmXC{userdict/fMSi 2 index put end{
countdictstack userdict begin/showpage{}def/FmDictStackDepth exch def count
/FmStackDepth exch def}if userdict/fMSuccessfull false put currentfile cvx
stopped pop fMSuccessfull not{/$brkpage where{stop}if systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame4Picture)eq{exit}if}loop grestore end}if userdict
/fMSuccessfull false put FrameMacDict/fmIR get exec}fmBi def/FmEP{save userdict
/fM7 3 -1 roll put setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey/fMex/fMei
/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew fMeh scale
fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale fMej fMel add
2 div neg fMei fMek add 2 div neg translate newpath fMel fMek moveto fMel fMei
lineto fMej fMei lineto fMej fMek lineto closepath clip newpath T fmXC}FmBD
/FmPI{newpath 0 0 moveto F fmXC}FmBD/FmPc{save userdict/fM7 3 -1 roll put
newpath 3 index neg 3 index neg translate 1 -1 scale 0.0 0.0 moveto T fmXC}FmBD
/fmIR{fMSi{fM7 type/savetype eq{end/FmDictStackDepth where{pop countdictstack
FmDictStackDepth sub dup 0 gt{{end}repeat}{pop}ifelse count FmStackDepth sub
dup 0 gt{{pop}repeat}{pop}ifelse}if fM7 restore}if}if FrameMacDict begin}FmBD
userdict/EndFrame4Picture{userdict/fMSi 3 -1 roll put userdict/fMSuccessfull
true put stop}fmBi put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not
{limitcheck}if pop image}fmPU}ifelse/fmDE{systemdict/initgraphics get exec
clippath{pathbbox}stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/FmRealcd fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if
/FmRealcd load end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{
FrameMacDict/fMRE get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile
fMSJ{readline}stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi
put}if}ifelse systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Bob Jacobsen; page: 1 of 5)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1 G
-18 -8 612 792 rF
0 G
0 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
0 0 :M
f0_10 sf
( )S
2 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 34.667 M (BaBar Reconstruction Note 1)S
end
3 0 :M
f1_18 sf
( )S
7 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
102.65 76 M (Structur)S
-0.321 N (e of the )S
(BaBar)S
( Reconstruction Softwar)S
-0.321 N (e)S
end
7 0 :M
f0_12 sf
( )S
10 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
186.001 108 M (Bob Jacobsen \(Bob_Jacobsen@LBL.Gov\))S
211.11 126 M (DRAFT)S
-0.214 N ( Sept. 13, 1995 DRAFT)S
end
10 0 :M
f1_14 sf
( )S
13 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 157.333 M (1)S
29 N (Intr)S
-0.25 N (oduction)S
end
14 0 :M
f0_12 sf
( )S
17 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 177 M 0.154(This note documents the overall structure of )W
(BaBar)S
0.154( reconstruction software. It is intended)W
90 191 M 2.652(to explain the overall architecture so that individual designers and programmers can)W
90 205 M (understand where best to make their extensions.)S
104.4 223 M 0.161(This is a working document. It corresponds to software that is expected to be in BaBar)W
90 237 M 0.141(release 0.5.0, due early November)W
-0.659 N 0.141(. Updates should be expected and will be announced on)W
90 251 M 0.997(the RECOSOFT)W
-0.214 N 0.997( mailing list. )W
-0.659 N 0.997(Additional information is available on the common recon-)W
90 265 M (struction )S
-0.214 N (W)S
-0.958 N (eb page:)S
end
17 0 :M
f3_10 sf
( )S
23 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
109.4 281.667 M 0 0 348(http://www.slac.stanford.edu/BF/doc/www/CompRecCommon.html)FmTx
end
23 0 :M
f0_12 sf
( )S
26 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 299 M (and in the common reconstruction )S
-0.214 N (W)S
-0.958 N (eb discussion:)S
end
26 0 :M
f3_10 sf
( )S
32 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
108.4 315.667 M 0 0 396(http://www-hep.llnl.gov/HyperNews/get/babardiscuss/recoCommon.html)FmTx
end
32 0 :M
f1_14 sf
( )S
35 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 346.333 M (2)S
29 N (Softwar)S
-0.25 N (e Organization)S
end
35 0 :M
f0_12 sf
( )S
38 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 366 M 1.709(The reconstruction software starts with the raw data from the detector)W
-0.659 N 1.709(. It then \322recon-)W
90 380 M 1.236(structs\323 various items of interest from more and more complicated combinations of the)W
90 394 M -0.192(raw data. )W
-0.659 N -0.192(An example would be reconstruction of a )W
end
38 0 :M
f4_12 sf
( )S
41 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
336.169 394 M (p)S
end
41 0 :M
f0_10 sf
( )S
43 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 342.755 389.2 M 0.96 0.96 scale (0)S FmR
end
44 0 :M
f0_12 sf
( )S
47 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
347.56 394 M -0.192( candidate, which starts with the raw)W
90 408 M 0.298(calorimeter output from individual crystals. )W
-0.214 N 0.298(These are combined to make clusters \(ener)W
-0.214 N (gy)S
90 422 M 0.638(depositions in adjacent crystals\), which are then combined to make )W
end
47 0 :M
f4_12 sf
( )S
50 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
421.258 422 M (p)S
end
50 0 :M
f0_10 sf
( )S
52 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 427.844 417.2 M 0.96 0.96 scale (0)S FmR
end
52 0 :M
f0_12 sf
( )S
55 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
432.649 422 M 0.638( candidates. )W
-0.214 N (These)S
90 436 M (candidates are then examined, and satisfactory ones are kept for use in physics.)S
104.4 454 M (Note several characteristics, each of which will be described further below:)S
104.4 472 M (\245)S
17.402 N -0.085(There are clear processing steps. )W
-0.214 N -0.085(These typically construct a product from multiple)W
126 486 M -0.026(input items, perhaps even from multiple types of input information. )W
-0.214 N -0.026(There are con-)W
126 500 M 1.153(straints on the order in which these can be done; required input must have been)W
126 514 M 0.476(created, and output not yet needed. )W
-0.214 N 0.476(These steps will be done by )W
end
55 0 :M
f2_12 sf
( )S
58 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
438.053 514 M (modules)S
end
58 0 :M
f0_12 sf
( )S
61 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
478.043 514 M 0.476(. )W
-0.659 N (A)S
-0.659 N 0.476( given)W
126 528 M 0.64(module may have parameters which determine exactly what is done. )W
-0.214 N 0.64(The module)W
126 542 M (will retrieve the values of these parameters from a )S
end
61 0 :M
f2_12 sf
( )S
64 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
369.53 542 M (parameter stor)S
-0.442 N (e)S
end
64 0 :M
f0_12 sf
( )S
67 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
446.065 542 M (.)S
104.4 560 M (\245)S
17.402 N 1.269(The items of interest are used both by physics analysis, and also by modules to)W
126 574 M 0.48(produce further items of interest. )W
-0.659 N 0.48(As such, they must last as long as required, per)W
-0.237 N (-)S
126 588 M 1.178(haps be written to a permanent output tape. )W
-0.214 N 1.178(They must also be usable in a wide)W
126 602 M 1.192(variety of contexts, some of which may not have been foreseen. For example, a)W
126 616 M 1.506(module may need to know where a char)W
-0.214 N 1.506(ged track intersects a detector element.)W
126 630 M -0.045(Items of interest will be implemented as )W
end
67 0 :M
f2_12 sf
( )S
70 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
321.283 630 M -0.045(objects )W
end
70 0 :M
f0_12 sf
( )S
73 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
358.225 630 M -0.045(of a de\336)W
-0.045(ned type. )W
-0.214 N -0.045(These will carry)W
126 644 M (both code and data needed to provide the functionality required by their users.)S
104.4 662 M (\245)S
17.402 N -0.014(Modules must be able to \336)W
-0.014(nd their input data, and be able to store their output data)W
126 676 M 1.322(for further use. Event-speci\336)W
1.322(c data is kept as lists in an )W
end
73 0 :M
f2_12 sf
( )S
76 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
406.434 676 M (event)S
end
76 0 :M
f0_12 sf
( )S
79 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
431.747 676 M 1.322( object. I/O of the)W
126 690 M (event is separated from the modules that use and/or create the objects in the event.)S
104.4 708 M (\245)S
17.402 N -0.053(Modules must have access to calibration and geometry data. )W
-0.214 N -0.053(This data may change)W
end
79 0 :M
f0_10 sf
( )S
81 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
-18 -8 M ( )S
185 782 M (This document was created with FrameMaker 4.0.4) FmPT
[/CropBox[-18 784 FmDC 594 -8 FmDC]/PAGE FmPD
end
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Bob Jacobsen; page: 2 of 5)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1 G
-18 -8 612 792 rF
0 G
82 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
82 0 :M
f0_10 sf
( )S
84 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
265.368 740.344 M (Page )S
(2)S
( of )S
(5)S
end
85 0 :M
f0_12 sf
( )S
88 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
126 72 M -0.085(with time, run number)W
-0.478 N -0.085(, or other key)W
-0.779 N -0.085(. )W
-0.659 N -0.085(Access to this data is via accessor functions in)W
126 86 M (a )S
end
88 0 :M
f2_12 sf
( )S
91 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
134.326 86 M (calibration stor)S
-0.442 N (e)S
end
91 0 :M
f0_12 sf
( )S
94 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
214.207 86 M ( object.)S
104.4 104 M (\245)S
17.402 N 0.313(Some functions must be performed multiple times, but cannot logically be always)W
126 118 M 1.011(done in advance. For example, \336)W
1.011(nding the sphericity of an entire event could be)W
126 132 M 0.223(done by a module, but a physics analysis may need the sphericity of some smaller)W
126 146 M 0.24(subset of tracks. )W
-0.659 N 0.24(Assuming that it is not cost ef)W
-0.214 N 0.24(fective to precalculate all such sub-)W
126 160 M 1.387(sets, this is then a function that should be put in a )W
end
94 0 :M
f2_12 sf
( )S
97 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
382.259 160 M (librar)S
(y)S
end
97 0 :M
f0_12 sf
( )S
100 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
414.808 160 M 1.387(. )W
(BaBar)S
1.387( will use both)W
126 174 M (locally-written and external libraries.)S
104.4 192 M (\245)S
17.402 N 0.49(All of this code must be or)W
-0.214 N 0.49(ganized, stored, and distributed. )W
-0.214 N 0.49(This is done by divid-)W
126 206 M 0.166(ing the code into )W
end
100 0 :M
f2_12 sf
( )S
103 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
209.978 206 M (packages)S
end
103 0 :M
f0_12 sf
( )S
106 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
254.623 206 M 0.166(, and then placing them into the )W
(BaBar)S
0.166( software release)W
126 220 M (system)S
([1])S
1.233(. )W
-0.659 N (A)S
-0.659 N 1.233( package should be a coherent, consistent group of source \336)W
1.233(les that)W
126 234 M (provides a well-described set of functions)S
([2])S
(.)S
end
106 0 :M
f1_14 sf
( )S
109 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 265.333 M (3)S
29 N (Modules)S
end
109 0 :M
f0_12 sf
( )S
112 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 285 M 0.192(Modules have a simple interface with the rest of the reconstruction software. Speci\336)W
(cally)S
-0.779 N (,)S
90 299 M 1.077(a module is an object of a class descended from )W
-0.659 N 1.077(AbsModule, which can provide one or)W
90 313 M (more of the following entry points:)S
end
112 0 :M
f3_10 sf
( )S
118 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
140.4 329.667 M 0 0 162(void begin\( AbsJob* aJob \);)FmTx
140.4 343.667 M 0 0 162(void begin\( AbsRun* aRun \);)FmTx
140.4 357.667 M 0 0 246(void event\( AbsEvent* ev, int mode = 0 \);)FmTx
140.4 371.667 M 0 0 300(void event\( HepAList<AbsEvent>* ev, int mode = 0\);)FmTx
140.4 385.667 M 0 0 162(void end  \( AbsRun* aRun \);)FmTx
140.4 399.667 M 0 0 162(void end  \( AbsJob* aJob \);)FmTx
140.4 413.667 M 0 0 162(void abort\( AbsJob* aJob \);)FmTx
end
118 0 :M
f0_12 sf
( )S
121 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 431 M -0.143(The two begin and end entry points are dif)W
-0.214 N -0.143(ferentiated by whether it is the beginning or end)W
90 445 M 0.415(of the reconstruction )W
end
121 0 :M
f2_12 sf
( )S
124 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
193.532 445 M (job)S
end
124 0 :M
f0_12 sf
( )S
127 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
208.866 445 M 0.415(, or of an experimental )W
end
127 0 :M
f2_12 sf
( )S
130 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
322.887 445 M (r)S
(un)S
end
130 0 :M
f0_12 sf
( )S
133 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
339.554 445 M 0.415( within the job.)W
end
133 0 :M
f0_10 sf
( )S
135 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 413.458 440.2 M 0.96 0.96 scale (1)S FmR
end
136 0 :M
f0_12 sf
( )S
139 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
418.263 445 M 0.415( )W
-0.214 N 0.415(The information car)W
-0.237 N (-)S
90 459 M (ried by the )S
-0.659 N (AbsJob and )S
-0.659 N (AbsRun objects is still to be de\336)S
(ned.)S
104.4 477 M 2.037(The two event entry points are for processing the individual )W
end
139 0 :M
f2_12 sf
( )S
142 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
414.661 477 M (events)S
end
142 0 :M
f0_12 sf
( )S
145 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
444.64 477 M 2.037( \(triggered data)W
90 491 M 0.733(records\) during reconstruction. )W
-0.214 N 0.733(The entry taking a list as an ar)W
-0.214 N 0.733(gument is the primary one)W
90 505 M 0.161(used; its default behavior is to call the other entry with each event on the list individually)W
-0.779 N (.)S
90 519 M 0.165(This is done so that multiple simultaneous events can be processed together; for example,)W
90 533 M 0.764(during a background study the list might contain a Monte Carlo B event, plus three ran-)W
90 547 M (dom triggers from the detector)S
-0.659 N (.)S
104.4 565 M 0.229(Modules will be interconnected and run by a \322framework\323. )W
-0.214 N (W)S
-0.958 N 0.229(e currently have a proto-)W
90 579 M 3.419(type for a complex framework)W
([3])S
3.419( capable of dynamic recon\336)W
3.419(guration and run-time)W
90 593 M 0.001(changes to module run order)W
-0.659 N 0.001(. )W
-0.214 N (W)S
-0.958 N 0.001(e expect that this will be further developed into the frame-)W
90 607 M 0.189(work to be used for full reconstruction of bulk data. )W
-0.659 N (A)S
-0.659 N 0.189( simpler framework more suited for)W
90 621 M 0.651(test and development of single modules and simple analysis work is also under develop-)W
90 635 M -0.078(ment. It is a strict design requirement that all frameworks must accept and run all modules)W
90 649 M (obeying the de\336)S
(ned interfaces.)S
104.4 667 M (A)S
-0.659 N 0.654( module is inherently a C++ object. It is possible to implement the underlying algo-)W
end
54 673 468 16 rC
145 0 :M
FrameMacDict begin
54 673 468 15 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
63 675 FmB
144 0 FmL
2 0.5 FmSo
end
gR
gS 0 0 576 776 rC
145 0 :M
f0_10 sf
( )S
147 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
72 694.667 M (1. )S
-0.178 N (W)S
-0.798 N (e do not yet know if BaBar will even have a \322run\323 de\336)S
(ned in a manner that requires this, but are build-)S
72 706.667 M (ing into this spec now in case it appears later)S
-0.549 N (.)S
[/CropBox[-18 784 FmDC 594 -8 FmDC]/PAGE FmPD
[/Rect[159 224 173 212]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
[/Rect[326 238 340 226]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
[/Rect[250 583 264 571]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
end
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Bob Jacobsen; page: 3 of 5)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1 G
-18 -8 612 792 rF
0 G
148 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
148 0 :M
f0_10 sf
( )S
150 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
265.368 740.344 M (Page )S
(3)S
( of )S
(5)S
end
151 0 :M
f0_12 sf
( )S
154 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 72 M 1.095(rithm in FOR)W
-0.718 N 1.095(TRAN90 through the use of a C++ \322wrapper\323 function if necessary at the)W
90 86 M (cost of some performance. )S
-0.659 N (An example was available)S
([4])S
(.)S
end
154 0 :M
f1_14 sf
( )S
157 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 117.333 M (4)S
29 N (Data )S
-0.769 N (Access)S
end
157 0 :M
f0_12 sf
( )S
160 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
104.4 137 M 2.518(The )W
-0.659 N 2.518(AbsEvent object passed via pointer to the event routine contains all the data)W
90 151 M 0.931(objects associated with the event, including any output data that this module might pro-)W
90 165 M 0.995(duce. )W
-0.659 N (A)S
-0.659 N 0.995( more detailed description is available elsewhere)W
([5])S
0.995(. Brie\337)W
(y)S
-0.779 N 0.995(, an )W
-0.659 N 0.995(AbsEvent object)W
90 179 M -0.235(contains two types of data lists. Permanent data, de\336)W
-0.235(ned as data that the I/O subsystem can)W
90 193 M -0.069(write out, can be be put on lists that are obtained from the event object using named mem-)W
90 207 M (ber functions, e.g.)S
end
160 0 :M
f3_10 sf
( )S
166 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
140.4 223.667 M 0 0 288(HepAList<AtcDigi>* list = ev->getAtcDigiAList\(\);)FmTx
140.4 237.667 M 0 0 228(list->append\(new AtcDigi\( [stuff] \) \);)FmTx
end
166 0 :M
f0_12 sf
( )S
169 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 255 M (T)S
-0.838 N 0.267(emporary data, de\336)W
0.267(ned as lists of items that the I/O system either cannot \(yet\) write out,)W
90 269 M -0.13(or that are not required to be written, can be stored in the event object in an ad hoc manner)W
90 283 M 1.343(with a user de\336)W
1.343(ned key)W
-0.779 N 1.343(. )W
-0.214 N 1.343(This is useful when two modules need to exchange temporary)W
90 297 M -0.285(information, but there is no need to write in onto a data tape, for example whenit is quicker)W
90 311 M (to recreate the objects than to reread them.)S
104.4 329 M -0.287(Modules also need access to parameter information, geometry information, and calibra-)W
90 343 M 0.68(tion constants. Proposals are being developed for these interfaces, and more de\336)W
0.68(nition is)W
90 357 M 0.902(expected in December 1995)W
([6])S
0.902(. )W
-0.214 N 0.902(The proposals are along the same lines as the )W
-0.659 N (AbsEvent)S
90 371 M 0.635(object, in that they attempt to separate the I/O of the constants from their internal access)W
90 385 M 1.268(by the code. Constants are held in objects which provide access via member functions.)W
90 399 M 2.834(These member functions can then be transparently rede\336)W
2.834(ned to work with whatever)W
90 413 M 1.856(underlying I/O method is required. Because of dif)W
-0.214 N 1.856(ferent requirements for creation and)W
90 427 M 0.797(control, it is likely that we will de\336)W
0.797(ne separate objects to store calibration and geometry)W
90 441 M 2.152(information \(calibration stores\) and to store parameters used to control reconstruction)W
90 455 M -0.188(code \(parameter stores\). Initial implementations are expected to be based on dbio for read-)W
90 469 M (ing and writing memory resident objects from a \322database\323 constants \336)S
(le.)S
end
169 0 :M
f1_14 sf
( )S
172 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 500.333 M (5)S
29 N (Objects and Overall Structur)S
-0.25 N (e)S
end
173 0 :M
f0_12 sf
( )S
176 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 520 M 0.377(Modules exist within an overall system. In particular)W
-0.478 N 0.377(, the data items that the modules use)W
90 534 M 0.461(as input and produce as output must be well de\336)W
0.461(ned, and the relationships between mod-)W
90 548 M 0.762(ules must be understood. )W
-0.214 N 0.762(This will be a major focus of reconstruction work during 1995)W
90 562 M (and early 1996.)S
104.4 580 M 0.736(Figure 1)W
0.736( shows the \336)W
0.736(rst step in this process. It is a very preliminary information \337)W
(ow)S
90 594 M 0.676(diagram, showing the rough \337)W
0.676(ow of information from the raw input data \(top of the dia-)W
90 608 M -0.103(gram\) through various reconstructed objects. Each rounded rectangle represents both a list)W
90 622 M (of output objects and the module\(s\) that create it. )S
104.4 640 M (Each data type in the reconstruction software system must be de\336)S
(ned in several ways:)S
104.4 658 M (\245)S
17.402 N 1.497(What services does it provide to modules which use it? For example, a Recon-)W
126 672 M (structedT)S
-0.419 N 0.199(rack object can determine its point of closest approach to a given line, or)W
126 686 M (where it intersects a given cylinder)S
-0.659 N (. )S
104.4 704 M (\245)S
17.402 N 3.551(What data types are needed for it to perform its function? For example, a)W
[/CropBox[-18 784 FmDC 594 -8 FmDC]/PAGE FmPD
[/Rect[366 169 380 157]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
[/Rect[227 361 241 349]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
[/Rect[346 90 360 78]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
end
176 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
[/Rect[104 584 145 572]/Border[0 0 0]/Page 4/View[/FitH 55 -80 FmDC exch pop]/LNK FmPD
end
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Bob Jacobsen; page: 4 of 5)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1 G
-18 -8 612 792 rF
0 G
176 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
176 0 :M
f0_10 sf
( )S
178 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
265.368 740.344 M (Page )S
(4)S
( of )S
(5)S
end
54 64 468 638 rC
179 0 :M
FrameMacDict begin
54.504 64 466.992 637.992 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
1 G
63 69 450 611 rC
117 322 183 350 3.5 @q
0 G
117.5 322.5 182.5 349.5 3 @s
gS
.112 .112 scale
1066.782 2961.526 :M
f5_80 sf
-.055(Reconstructed)A
1271.249 3059.355 :M
1 G
0 G
-.367(Hit)A
gR
1 G
117 371 183 404 4 @q
0 G
2 lw
118 372 182 403 3 @s
gS
.112 .112 scale
1066.782 3415.093 :M
f5_80 sf
-.055(Reconstructed)A
1226.8 3512.922 :M
(Track)S
gR
63 69 450 295 rC
-1 -1 150 372 1 1 149 349 @b
gR
gS 63 69 450 611 rC
-1 -1 150 372 1 1 153 358 @b
145 359 -1 1 154 358 1 145 358 @a
145 359 -1 1 150 371 1 145 358 @a
np 149 371 :M
153 358 :L
145 358 :L
149 371 :L
eofill
1 G
79 144 134 178 4 @q
0 G
79.5 144.5 133.5 177.5 3.5 @s
gS
.112 .112 scale
808.977 1449.636 :M
1 G
f5_80 sf
0 G
-.053(SvtDigi)A
gR
1 G
79 204 134 237 4 @q
0 G
79.5 204.5 133.5 236.5 3.5 @s
gS
.112 .112 scale
755.638 1974.351 :M
1 G
f5_80 sf
0 G
-.099(SvtCluster)A
gR
1 G
79 263 140 296 4 @q
0 G
79.5 263.5 139.5 295.5 3.5 @s
gS
.112 .112 scale
764.527 2499.066 :M
1 G
f5_80 sf
0 G
(SvtRecoHit)S
gR
1 G
160 144 221 178 4 @q
0 G
160.5 144.5 220.5 177.5 3.5 @s
gS
.112 .112 scale
1546.834 1449.636 :M
1 G
f5_80 sf
0 G
(DchDigi)S
gR
1 G
252 144 307 178 4 @q
0 G
252.5 144.5 306.5 177.5 3.5 @s
gS
.112 .112 scale
2329.142 1449.636 :M
1 G
f5_80 sf
0 G
-.119(EmcDigi)A
gR
1 G
333 144 383 178 4 @q
0 G
333.5 144.5 382.5 177.5 3.5 @s
gS
.112 .112 scale
3066.999 1449.636 :M
1 G
f5_80 sf
0 G
-.135(IfrDigi)A
gR
1 G
463 144 512 178 4 @q
0 G
463.5 144.5 511.5 177.5 3.5 @s
gS
.112 .112 scale
4187.121 1449.636 :M
1 G
f5_80 sf
0 G
(DircDigi)S
gR
1 G
398 144 447 178 4 @q
0 G
398.5 144.5 446.5 177.5 3.5 @s
gS
.112 .112 scale
3618.17 1449.636 :M
1 G
f5_80 sf
0 G
-.053(AtcDigi)A
gR
1 G
160 263 215 296 4 @q
0 G
160.5 263.5 214.5 295.5 3.5 @s
gS
.112 .112 scale
1449.046 2499.066 :M
f5_80 sf
-.073(DchRecoHit)A
gR
63 69 450 128 rC
-1 -1 107 205 1 1 106 177 @b
gR
gS 63 69 450 611 rC
-1 -1 107 205 1 1 110 190 @b
102 191 -1 1 111 190 1 102 190 @a
102 191 -1 1 107 204 1 102 190 @a
np 106 204 :M
110 190 :L
102 190 :L
106 204 :L
eofill
63 69 450 187 rC
-1 -1 107 264 1 1 106 236 @b
gR
gS 63 69 450 611 rC
-1 -1 107 264 1 1 110 250 @b
102 251 -1 1 111 250 1 102 250 @a
102 251 -1 1 107 263 1 102 250 @a
np 106 263 :M
110 250 :L
102 250 :L
106 263 :L
eofill
63 69 450 187 rC
-1 -1 188 264 1 1 187 177 @b
gR
gS 63 69 450 611 rC
-1 -1 188 264 1 1 191 250 @b
183 251 -1 1 192 250 1 183 250 @a
183 251 -1 1 188 263 1 183 250 @a
np 187 263 :M
191 250 :L
183 250 :L
187 263 :L
eofill
63 69 74 247 rC
117 296 -1 1 144 322 1 117 295 @a
gR
gS 63 69 450 611 rC
137 311 -1 1 145 322 1 137 310 @a
-1 -1 133 317 1 1 137 310 @b
132 317 -1 1 145 322 1 132 316 @a
np 144 322 :M
137 310 :L
132 316 :L
144 322 :L
eofill
162 69 351 248 rC
-1 -1 156 323 1 1 186 295 @b
gR
gS 63 69 450 611 rC
-1 -1 156 323 1 1 168 317 @b
163 312 -1 1 169 317 1 163 311 @a
-1 -1 156 323 1 1 163 311 @b
np 155 322 :M
168 317 :L
163 311 :L
155 322 :L
eofill
1 G
252 241 307 275 4 @q
.568 G
2 lw
253 242 306 274 3 @s
gS
.112 .112 scale
2266.913 2312.303 :M
0 G
f5_80 sf
-.032(EmcCluster)A
gR
0 G
63 69 450 166 rC
-1 -1 280 242 1 1 279 177 @b
gR
gS 63 69 450 611 rC
-1 -1 280 242 1 1 283 228 @b
275 229 -1 1 284 228 1 275 228 @a
275 229 -1 1 280 241 1 275 228 @a
np 279 241 :M
283 228 :L
275 228 :L
279 241 :L
eofill
1 G
368 487 407 520 4 @q
0 G
368.5 487.5 406.5 519.5 3.5 @s
gS
.112 .112 scale
3298.136 4491.204 :M
1 G
f5_80 sf
0 G
(MuonID)S
gR
1 G
344 609 404 642 4 @q
0 G
2 lw
345 610 403 641 3 @s
gS
.112 .112 scale
3138.118 5531.74 :M
f5_80 sf
-.059(Particle Id)A
3200.347 5620.675 :M
1 G
0 G
-.136(Result)A
gR
1 G
np 279 69 :M
257 91 :L
279 113 :L
302 91 :L
279 69 :L
eofill
0 G
-1 -1 258 91 1 1 279 69 @b
257 91 -1 1 280 112 1 257 90 @a
-1 -1 280 113 1 1 301 90 @b
279 70 -1 1 302 90 1 279 69 @a
gS
.112 .112 scale
2418.04 827.093 :M
f5_80 sf
-.376(MC)A
gR
63 69 450 69 rC
-1 -1 188 145 1 1 187 112 @b
gR
gS 63 69 450 611 rC
-1 -1 188 145 1 1 191 131 @b
183 132 -1 1 192 131 1 183 131 @a
183 132 -1 1 188 144 1 183 131 @a
np 187 144 :M
191 131 :L
183 131 :L
187 144 :L
eofill
63 69 450 69 rC
-1 -1 280 145 1 1 279 112 @b
gR
gS 63 69 450 611 rC
-1 -1 280 145 1 1 283 131 @b
275 132 -1 1 284 131 1 275 131 @a
275 132 -1 1 280 144 1 275 131 @a
np 279 144 :M
283 131 :L
275 131 :L
279 144 :L
eofill
63 69 450 69 rC
-1 -1 107 145 1 1 106 112 @b
gR
gS 63 69 450 611 rC
-1 -1 107 145 1 1 110 131 @b
102 132 -1 1 111 131 1 102 131 @a
102 132 -1 1 107 144 1 102 131 @a
np 106 144 :M
110 131 :L
102 131 :L
106 144 :L
eofill
63 69 450 69 rC
-1 -1 361 145 1 1 360 112 @b
gR
gS 63 69 450 611 rC
-1 -1 361 145 1 1 364 131 @b
356 132 -1 1 365 131 1 356 131 @a
356 132 -1 1 361 144 1 356 131 @a
np 360 144 :M
364 131 :L
356 131 :L
360 144 :L
eofill
63 69 450 69 rC
-1 -1 420 145 1 1 419 112 @b
gR
gS 63 69 450 611 rC
-1 -1 420 145 1 1 423 131 @b
415 132 -1 1 424 131 1 415 131 @a
415 132 -1 1 420 144 1 415 131 @a
np 419 144 :M
423 131 :L
415 131 :L
419 144 :L
eofill
63 69 450 69 rC
-1 -1 485 145 1 1 484 112 @b
gR
gS 63 69 450 611 rC
-1 -1 485 145 1 1 488 131 @b
480 132 -1 1 489 131 1 480 131 @a
480 132 -1 1 485 144 1 480 131 @a
np 484 144 :M
488 131 :L
480 131 :L
484 144 :L
eofill
1 G
np 485 69 :M
463 91 :L
485 113 :L
507 91 :L
485 69 :L
eofill
0 G
-1 -1 464 91 1 1 484 69 @b
463 91 -1 1 485 112 1 463 90 @a
-1 -1 485 113 1 1 506 90 @b
484 70 -1 1 507 90 1 484 69 @a
gS
.112 .112 scale
4240.46 827.093 :M
1 G
f5_80 sf
0 G
-.376(MC)A
gR
1 G
np 420 69 :M
398 91 :L
420 113 :L
442 91 :L
420 69 :L
eofill
0 G
-1 -1 399 91 1 1 419 69 @b
398 91 -1 1 420 112 1 398 90 @a
-1 -1 420 113 1 1 441 90 @b
419 70 -1 1 442 90 1 419 69 @a
gS
.112 .112 scale
3662.62 827.093 :M
1 G
f5_80 sf
0 G
-.376(MC)A
gR
1 G
np 360 69 :M
338 91 :L
360 113 :L
383 91 :L
360 69 :L
eofill
0 G
-1 -1 339 91 1 1 360 69 @b
338 91 -1 1 361 112 1 338 90 @a
-1 -1 361 113 1 1 382 90 @b
360 70 -1 1 383 90 1 360 69 @a
gS
.112 .112 scale
3138.118 827.093 :M
1 G
f5_80 sf
0 G
-.376(MC)A
gR
1 G
np 107 69 :M
85 91 :L
107 113 :L
129 91 :L
107 69 :L
eofill
0 G
-1 -1 86 91 1 1 106 69 @b
85 91 -1 1 107 112 1 85 90 @a
-1 -1 107 113 1 1 128 90 @b
106 70 -1 1 129 90 1 106 69 @a
gS
.112 .112 scale
880.095 827.093 :M
1 G
f5_80 sf
0 G
-.376(MC)A
gR
1 G
np 188 69 :M
166 91 :L
188 113 :L
210 91 :L
188 69 :L
eofill
0 G
-1 -1 167 91 1 1 187 69 @b
166 91 -1 1 188 112 1 166 90 @a
-1 -1 188 113 1 1 209 90 @b
187 70 -1 1 210 90 1 187 69 @a
gS
.112 .112 scale
1600.174 827.093 :M
1 G
f5_80 sf
0 G
-.376(MC)A
gR
1 G
np 85 317 :M
63 339 :L
85 361 :L
107 339 :L
85 317 :L
eofill
0 G
-1 -1 64 340 1 1 85 317 @b
63 340 -1 1 86 360 1 63 339 @a
-1 -1 86 361 1 1 106 339 @b
85 318 -1 1 107 339 1 85 317 @a
gS
.112 .112 scale
684.519 3032.674 :M
f5_80 sf
-.376(MC)A
gR
63 69 47 295 rC
95 350 -1 1 117 370 1 95 349 @a
gR
gS 63 69 450 611 rC
110 360 -1 1 118 371 1 110 359 @a
-1 -1 106 365 1 1 110 359 @b
105 365 -1 1 118 371 1 105 364 @a
np 117 371 :M
110 359 :L
105 364 :L
117 371 :L
eofill
1 G
np 225 193 :M
203 215 :L
225 237 :L
248 215 :L
225 193 :L
eofill
0 G
-1 -1 204 215 1 1 225 193 @b
203 215 -1 1 226 236 1 203 214 @a
-1 -1 226 237 1 1 247 214 @b
225 194 -1 1 248 214 1 225 193 @a
gS
.112 .112 scale
1937.988 1929.884 :M
f5_80 sf
-.376(MC)A
gR
63 69 182 166 rC
236 226 -1 1 252 241 1 236 225 @a
gR
gS 63 69 450 611 rC
245 230 -1 1 253 241 1 245 229 @a
-1 -1 241 236 1 1 245 229 @b
240 236 -1 1 253 241 1 240 235 @a
np 252 241 :M
245 229 :L
240 235 :L
252 241 :L
eofill
1 G
333 241 383 275 4 @q
.568 G
333.5 241.5 382.5 274.5 3.5 @s
gS
.112 .112 scale
3084.779 2312.303 :M
1 G
f5_80 sf
0 G
-.162(IfrHit)A
gR
1 G
460 388 509 421 4 @q
0 G
460.5 388.5 508.5 420.5 3.5 @s
gS
.112 .112 scale
4160.451 3619.643 :M
1 G
f5_80 sf
0 G
-.078(DircPID)A
gR
1 G
398 399 447 432 4 @q
0 G
398.5 399.5 446.5 431.5 3.5 @s
gS
.112 .112 scale
3627.06 3708.578 :M
f5_80 sf
-.185(AtcPID)A
gR
63 69 450 323 rC
422 178 -1 1 424 399 1 422 177 @a
gR
gS 63 69 450 611 rC
-1 -1 425 400 1 1 428 385 @b
420 386 -1 1 429 385 1 420 385 @a
420 386 -1 1 425 399 1 420 385 @a
np 424 399 :M
428 385 :L
420 385 :L
424 399 :L
eofill
63 69 389 611 rC
181 378 -1 1 460 391 1 181 377 @a
gR
gS 63 69 450 611 rC
446 388 -1 1 460 392 1 446 387 @a
-1 -1 446 396 1 1 446 387 @b
-1 -1 446 396 1 1 459 392 @b
np 459 392 :M
446 387 :L
445 395 :L
459 392 :L
eofill
63 69 326 611 rC
182 383 -1 1 397 408 1 182 382 @a
gR
gS 63 69 450 611 rC
383 404 -1 1 397 409 1 383 403 @a
-1 -1 383 412 1 1 383 403 @b
-1 -1 383 412 1 1 396 409 @b
np 396 409 :M
383 403 :L
382 411 :L
396 409 :L
eofill
1 G
176 452 231 485 4 @q
0 G
2 lw
177 453 230 484 3 @s
gS
.112 .112 scale
1671.292 4135.465 :M
f5_80 sf
-.129(Neutral)A
1706.852 4233.293 :M
-.233(Reco)A
gR
63 69 212 341 rC
207 296 -1 1 279 416 1 207 295 @a
gR
gS 63 69 450 611 rC
275 404 -1 1 280 417 1 275 403 @a
-1 -1 270 408 1 1 275 403 @b
269 408 -1 1 280 417 1 269 407 @a
np 279 417 :M
276 403 :L
269 407 :L
279 417 :L
eofill
63 69 125 376 rC
160 404 -1 1 193 451 1 160 403 @a
gR
gS 63 69 450 611 rC
188 440 -1 1 193 452 1 188 439 @a
-1 -1 183 444 1 1 188 439 @b
182 444 -1 1 193 452 1 182 443 @a
np 193 452 :M
188 439 :L
182 443 :L
193 452 :L
eofill
63 69 450 530 rC
-1 -1 396 607 1 1 433 431 @b
gR
gS 63 69 450 611 rC
-1 -1 396 607 1 1 402 594 @b
394 593 -1 1 403 594 1 394 592 @a
394 593 -1 1 396 606 1 394 592 @a
np 395 606 :M
402 594 :L
394 592 :L
395 606 :L
eofill
63 69 450 534 rC
-1 -1 402 610 1 1 485 423 @b
gR
gS 63 69 450 611 rC
-1 -1 402 610 1 1 410 599 @b
403 597 -1 1 411 599 1 403 596 @a
-1 -1 402 610 1 1 403 596 @b
np 401 609 :M
411 599 :L
403 596 :L
401 609 :L
eofill
63 69 450 165 rC
-1 -1 361 242 1 1 360 177 @b
gR
gS 63 69 450 611 rC
-1 -1 361 242 1 1 364 227 @b
356 228 -1 1 365 227 1 356 227 @a
356 228 -1 1 361 241 1 356 227 @a
np 360 241 :M
364 227 :L
356 227 :L
360 241 :L
eofill
1 G
68 441 123 474 4 @q
0 G
68.5 441.5 122.5 473.5 3.5 @s
gS
.112 .112 scale
675.629 4090.997 :M
f5_80 sf
-.149(RecoK0S)A
gR
63 69 450 365 rC
-1 -1 91 442 1 1 117 344 @b
gR
gS 63 69 450 611 rC
-1 -1 91 442 1 1 97 429 @b
90 428 -1 1 98 429 1 90 427 @a
-1 -1 91 442 1 1 90 427 @b
np 90 441 :M
97 429 :L
90 427 :L
90 441 :L
eofill
63 69 450 365 rC
-1 -1 112 442 1 1 127 403 @b
gR
gS 63 69 450 611 rC
-1 -1 113 442 1 1 120 430 @b
113 428 -1 1 121 430 1 113 427 @a
-1 -1 113 442 1 1 113 427 @b
np 112 441 :M
120 430 :L
113 427 :L
112 441 :L
eofill
1 G
262 403 317 437 4 @q
0 G
262.5 403.5 316.5 436.5 3.5 @s
gS
.112 .112 scale
2471.379 3699.685 :M
f5_80 sf
-.102(dEdx)A
2453.6 3797.513 :M
-.136(Result)A
gR
63 69 450 376 rC
-1 -1 209 453 1 1 268 274 @b
gR
gS 63 69 450 611 rC
-1 -1 210 453 1 1 217 440 @b
209 439 -1 1 218 440 1 209 438 @a
-1 -1 210 453 1 1 209 438 @b
np 209 452 :M
217 440 :L
209 438 :L
209 452 :L
eofill
230 69 283 376 rC
-1 -1 226 452 1 1 343 273 @b
gR
gS 63 69 450 611 rC
-1 -1 226 453 1 1 236 443 @b
229 440 -1 1 237 443 1 229 439 @a
-1 -1 226 453 1 1 229 439 @b
np 225 452 :M
236 443 :L
229 439 :L
225 452 :L
eofill
63 69 192 611 rC
182 389 -1 1 263 420 1 182 388 @a
gR
gS 63 69 450 611 rC
251 413 -1 1 263 420 1 251 412 @a
-1 -1 249 420 1 1 251 412 @b
248 420 -1 1 263 420 1 248 419 @a
np 262 421 :M
251 412 :L
248 419 :L
262 421 :L
eofill
63 69 450 410 rC
367 279 -1 1 389 486 1 367 278 @a
gR
gS 63 69 450 611 rC
-1 -1 390 487 1 1 391 472 @b
-1 -1 385 474 1 1 391 472 @b
384 474 -1 1 390 486 1 384 473 @a
np 389 486 :M
391 472 :L
384 473 :L
389 486 :L
eofill
63 69 450 410 rC
294 276 -1 1 379 486 1 294 275 @a
gR
gS 63 69 450 611 rC
377 473 -1 1 379 486 1 377 472 @a
-1 -1 370 476 1 1 377 472 @b
369 476 -1 1 379 486 1 369 475 @a
np 378 486 :M
377 472 :L
369 475 :L
378 486 :L
eofill
63 69 274 535 rC
214 485 -1 1 344 610 1 214 484 @a
gR
gS 63 69 450 611 rC
337 599 -1 1 345 610 1 337 598 @a
-1 -1 332 605 1 1 337 598 @b
331 605 -1 1 345 610 1 331 604 @a
np 344 610 :M
337 598 :L
331 604 :L
344 610 :L
eofill
63 69 450 531 rC
276 437 -1 1 349 607 1 276 436 @a
gR
gS 63 69 450 611 rC
347 594 -1 1 349 607 1 347 593 @a
-1 -1 340 597 1 1 347 593 @b
339 597 -1 1 349 607 1 339 596 @a
np 348 607 :M
347 593 :L
339 596 :L
348 607 :L
eofill
63 69 450 535 rC
-1 -1 378 611 1 1 384 519 @b
gR
gS 63 69 450 611 rC
-1 -1 378 611 1 1 382 597 @b
374 598 -1 1 383 597 1 374 597 @a
374 598 -1 1 378 610 1 374 597 @a
np 377 610 :M
382 597 :L
374 597 :L
377 610 :L
eofill
1 G
74 560 129 593 4 @q
0 G
74.5 560.5 128.5 592.5 3.5 @s
gS
.112 .112 scale
702.298 5140.427 :M
1 G
f5_80 sf
0 G
-.065(BeamSpot)A
gR
1 G
112 619 167 653 4 @q
0 G
112.5 619.5 166.5 652.5 3.5 @s
gS
.112 .112 scale
1031.223 5674.036 :M
1 G
f5_80 sf
0 G
(PrimaryVtx)S
gR
1 G
np 90 490 :M
68 512 :L
90 534 :L
113 512 :L
90 490 :L
eofill
0 G
-1 -1 69 512 1 1 90 490 @b
68 512 -1 1 91 533 1 68 511 @a
-1 -1 91 534 1 1 112 511 @b
90 491 -1 1 113 511 1 90 490 @a
gS
.112 .112 scale
737.858 4571.245 :M
f5_80 sf
-.376(MC)A
gR
63 69 450 484 rC
90 534 -1 1 96 560 1 90 533 @a
gR
gS 63 69 450 611 rC
-1 -1 96 561 1 1 96 546 @b
-1 -1 90 548 1 1 96 546 @b
89 548 -1 1 96 560 1 89 547 @a
np 95 560 :M
97 546 :L
89 547 :L
95 560 :L
eofill
1 G
198 646 253 680 4 @q
0 G
198.5 646.5 252.5 679.5 3.5 @s
gS
.112 .112 scale
1875.759 5914.159 :M
f5_80 sf
-.072(FitVtxs)A
gR
63 69 50 544 rC
101 593 -1 1 117 619 1 101 592 @a
gR
gS 63 69 450 611 rC
113 607 -1 1 118 619 1 113 606 @a
-1 -1 108 611 1 1 113 606 @b
107 611 -1 1 118 619 1 107 610 @a
np 117 619 :M
113 606 :L
107 610 :L
117 619 :L
eofill
63 69 450 544 rC
-1 -1 139 620 1 1 138 403 @b
gR
gS 63 69 450 611 rC
-1 -1 140 620 1 1 142 606 @b
135 607 -1 1 143 606 1 135 606 @a
135 607 -1 1 140 619 1 135 606 @a
np 139 619 :M
143 606 :L
135 606 :L
139 619 :L
eofill
63 69 450 571 rC
149 404 -1 1 209 646 1 149 403 @a
gR
gS 63 69 450 611 rC
-1 -1 210 647 1 1 209 632 @b
-1 -1 203 635 1 1 209 632 @b
202 635 -1 1 210 646 1 202 634 @a
np 209 646 :M
209 632 :L
202 634 :L
209 646 :L
eofill
63 69 128 585 rC
166 642 -1 1 198 656 1 166 641 @a
gR
gS 63 69 450 611 rC
188 649 -1 1 199 657 1 188 648 @a
-1 -1 185 655 1 1 188 648 @b
184 655 -1 1 199 657 1 184 654 @a
np 198 657 :M
188 648 :L
184 655 :L
198 657 :L
eofill
63 69 450 571 rC
117 475 -1 1 199 646 1 117 474 @a
gR
gS 63 69 450 611 rC
196 633 -1 1 199 646 1 196 632 @a
-1 -1 190 637 1 1 196 632 @b
189 637 -1 1 199 646 1 189 636 @a
np 198 646 :M
196 632 :L
189 636 :L
198 646 :L
eofill
63 69 450 571 rC
203 485 -1 1 226 646 1 203 484 @a
gR
gS 63 69 450 611 rC
-1 -1 226 647 1 1 227 632 @b
-1 -1 220 635 1 1 227 632 @b
219 635 -1 1 226 646 1 219 634 @a
np 225 646 :M
227 632 :L
219 634 :L
225 646 :L
eofill
259 69 254 611 rC
-1 -1 253 663 1 1 344 624 @b
gR
gS 63 69 450 611 rC
-1 -1 253 663 1 1 266 661 @b
263 655 -1 1 267 661 1 263 654 @a
-1 -1 253 663 1 1 263 654 @b
np 252 663 :M
266 661 :L
263 654 :L
252 663 :L
eofill
189 69 324 296 rC
-1 -1 183 371 1 1 200 353 @b
gR
gS 63 69 450 611 rC
-1 -1 183 372 1 1 194 364 @b
189 360 -1 1 195 364 1 189 359 @a
-1 -1 183 372 1 1 189 359 @b
np 182 371 :M
194 364 :L
189 359 :L
182 371 :L
eofill
1 G
206.5 347.5 8.5 @i
0 G
206.5 347.5 8 @e
gS
.112 .112 scale
1777.971 3112.715 :M
1 G
f5_80 sf
0 G
-.34(T0)A
gR
1 G
323.5 220.5 8.5 @i
0 G
323.5 220.5 8 @e
gS
.112 .112 scale
2818.084 1983.244 :M
f5_80 sf
-.34(T0)A
gR
311 69 202 167 rC
-1 -1 305 243 1 1 319 226 @b
gR
gS 63 69 450 611 rC
-1 -1 305 244 1 1 316 235 @b
311 231 -1 1 317 235 1 311 230 @a
-1 -1 305 244 1 1 311 230 @b
np 304 243 :M
316 235 :L
311 230 :L
304 243 :L
eofill
1 G
464 277 513 310 4 @q
0 G
464.5 277.5 512.5 309.5 3.5 @s
gS
.112 .112 scale
4213.791 2623.574 :M
f5_80 sf
-.144(DircHit)A
gR
63 69 450 203 rC
-1 -1 485 280 1 1 484 176 @b
gR
gS 63 69 450 611 rC
-1 -1 485 280 1 1 488 265 @b
480 266 -1 1 489 265 1 480 265 @a
480 266 -1 1 485 279 1 480 265 @a
np 484 279 :M
488 265 :L
480 265 :L
484 279 :L
eofill
63 69 450 312 rC
-1 -1 483 389 1 1 483 307 @b
gR
gS 63 69 450 611 rC
-1 -1 483 388 1 1 486 374 @b
479 375 -1 1 487 374 1 479 374 @a
479 375 -1 1 483 387 1 479 374 @a
np 482 388 :M
486 374 :L
479 374 :L
482 388 :L
eofill
1 G
447.5 247.5 8.5 @i
0 G
447.5 247.5 8 @e
gS
.112 .112 scale
3920.425 2223.368 :M
f5_80 sf
-.34(T0)A
gR
63 69 401 203 rC
452 253 -1 1 468 278 1 452 252 @a
gR
gS 63 69 450 611 rC
464 266 -1 1 469 279 1 464 265 @a
-1 -1 459 270 1 1 464 265 @b
458 270 -1 1 469 279 1 458 269 @a
np 468 279 :M
464 265 :L
458 269 :L
468 279 :L
eofill
63 69 330 326 rC
302 276 -1 1 398 401 1 302 275 @a
gR
gS 63 69 450 611 rC
393 390 -1 1 399 402 1 393 389 @a
-1 -1 388 395 1 1 393 389 @b
387 395 -1 1 399 402 1 387 394 @a
np 398 402 :M
393 389 :L
387 394 :L
398 402 :L
eofill
129 478 384 202 rC
122 474 -1 1 344 618 1 122 473 @a
gR
gS 63 69 450 611 rC
123 474 -1 1 133 484 1 123 473 @a
-1 -1 133 485 1 1 136 477 @b
123 474 -1 1 137 477 1 123 473 @a
np 123 473 :M
132 484 :L
136 477 :L
123 473 :L
eofill
1 G
316 490 360 522 4 @q
0 G
316.5 490.5 359.5 521.5 3.5 @s
gS
.112 .112 scale
2809.194 4508.991 :M
f5_80 sf
-.04(ElectronID)A
gR
63 69 450 534 rC
337 522 -1 1 366 610 1 337 521 @a
gR
gS 63 69 450 611 rC
-1 -1 366 611 1 1 365 596 @b
-1 -1 359 599 1 1 365 596 @b
358 599 -1 1 366 610 1 358 598 @a
np 365 610 :M
365 596 :L
358 598 :L
365 610 :L
eofill
63 69 450 412 rC
-1 -1 396 488 1 1 408 433 @b
gR
gS 63 69 450 611 rC
-1 -1 396 488 1 1 402 475 @b
395 474 -1 1 403 475 1 395 473 @a
-1 -1 396 488 1 1 395 473 @b
np 395 487 :M
402 475 :L
395 473 :L
395 487 :L
eofill
411 69 102 413 rC
-1 -1 405 489 1 1 467 421 @b
gR
gS 63 69 450 611 rC
-1 -1 405 489 1 1 416 481 @b
411 477 -1 1 417 481 1 411 476 @a
-1 -1 405 489 1 1 411 476 @b
np 404 488 :M
416 481 :L
411 476 :L
404 488 :L
eofill
334 69 179 416 rC
-1 -1 329 490 1 1 398 431 @b
gR
gS 63 69 450 611 rC
-1 -1 329 491 1 1 340 484 @b
335 479 -1 1 341 484 1 335 478 @a
-1 -1 329 491 1 1 335 478 @b
np 328 490 :M
341 485 :L
336 478 :L
328 490 :L
eofill
352 69 161 417 rC
-1 -1 347 490 1 1 461 421 @b
gR
gS 63 69 450 611 rC
-1 -1 347 491 1 1 359 486 @b
355 481 -1 1 360 486 1 355 480 @a
-1 -1 347 491 1 1 355 480 @b
np 346 490 :M
359 487 :L
355 480 :L
346 490 :L
eofill
63 69 450 415 rC
303 437 -1 1 324 491 1 303 436 @a
gR
gS 63 69 450 611 rC
322 478 -1 1 324 491 1 322 477 @a
-1 -1 316 481 1 1 322 477 @b
315 481 -1 1 324 491 1 315 480 @a
np 323 491 :M
322 477 :L
315 480 :L
323 491 :L
eofill
63 69 300 412 rC
315 436 -1 1 370 487 1 315 435 @a
gR
gS 63 69 450 611 rC
363 476 -1 1 371 487 1 363 475 @a
-1 -1 358 482 1 1 363 475 @b
357 482 -1 1 371 487 1 357 481 @a
np 370 487 :M
363 475 :L
357 481 :L
370 487 :L
eofill
63 69 450 414 rC
284 275 -1 1 346 490 1 284 274 @a
gR
gS 63 69 450 611 rC
-1 -1 346 491 1 1 346 476 @b
-1 -1 339 479 1 1 346 476 @b
338 479 -1 1 346 490 1 338 478 @a
np 346 490 :M
346 476 :L
338 478 :L
346 490 :L
eofill
63 69 246 426 rC
179 405 -1 1 316 499 1 179 404 @a
gR
gS 63 69 450 611 rC
307 490 -1 1 317 500 1 307 489 @a
-1 -1 304 496 1 1 307 489 @b
303 496 -1 1 317 500 1 303 495 @a
np 316 500 :M
307 489 :L
303 496 :L
316 500 :L
eofill
63 69 298 419 rC
181 397 -1 1 368 490 1 181 396 @a
gR
gS 63 69 450 611 rC
358 482 -1 1 369 491 1 358 481 @a
-1 -1 355 489 1 1 358 481 @b
354 489 -1 1 369 491 1 354 488 @a
np 368 491 :M
358 481 :L
354 488 :L
368 491 :L
eofill
354 488 :M
false
EndFrame4Picture
end
gR
gS 54 64 468 638 rC
179 0 :M
FrameMacDict begin
54.504 64 466.992 637.992 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
80.004 683 412 16 FmqF
end
179 0 :M
f0_10 sf
( )S
181 0 :M
FrameMacDict begin
54.504 64 466.992 637.992 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
152.004 689.667 M (Figure 1: )S
(An early reconstruction information \337)S
(ow diagram.)S
end
gR
gS 0 0 576 776 rC
182 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
[/CropBox[-18 784 FmDC 594 -8 FmDC]/PAGE FmPD
end
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Bob Jacobsen; page: 5 of 5)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1 G
-18 -8 612 792 rF
0 G
182 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
182 0 :M
f0_10 sf
( )S
184 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
265.368 740.344 M (Page )S
(5)S
( of )S
(5)S
end
185 0 :M
f0_12 sf
( )S
188 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
126 72 M 0.296(ReconstructedK0 object may be able to re\336)W
0.296(t for its momentum as a function of an)W
126 86 M 0.012(originating vertex hypothesis; this may require that the original underlying Recon-)W
126 100 M (structedT)S
-0.419 N (rack objects be available to provide error matrices, etc.)S
104.4 118 M (\245)S
17.402 N 1.694(What types of data are needed for its construction? )W
-0.214 N 1.694(This is related more to the)W
126 132 M 0.747(module that creates the objects than the objects themselves, but is still vital for a)W
126 146 M (complete understanding of the objects.)S
90 164 M -0.123(The design of these classes and their documentation must be done in a coherent manner)W
-0.659 N -0.123(. )W
-0.659 N (A)S
90 178 M (series of meetings and workshops are planned)S
([6])S
( to push this forward.)S
104.4 196 M 0.137(The main reconstruction objects will in general be de\336)W
0.137(ned as abstract base classes. For)W
90 210 M 1.161(example, the reconstructed track class will be de\336)W
1.161(ned so that dif)W
-0.214 N 1.161(ferent \336)W
1.161(tters can create)W
90 224 M 2.161(their own individual subclasses, which they then instantiate with their output objects.)W
90 238 M 1.04(Because all of these inherit from the original reconstructed track class, any module that)W
90 252 M 0.483(references a reconstructed track can use these dif)W
-0.214 N 0.483(ferent varieties interchangably)W
-0.779 N 0.483(. )W
-0.214 N 0.483(This is a)W
90 266 M -0.155(vital design feature, as it preserves our ability to change the underlying algorithm that pro-)W
90 280 M (duces a given object when we need to.)S
end
188 0 :M
f1_14 sf
( )S
191 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
54 311.333 M (6)S
29 N (Refer)S
-0.25 N (ences)S
end
191 0 :M
f0_12 sf
( )S
194 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
90 331 M ([1])S
22.014 N (\322Using the BaBar Software Release Structure\323, Reconstruction Note 2)S
90 349 M ([2])S
22.014 N (\322Naming Convention for BaBar Software\323, Reconstruction Note 4)S
90 367 M ([3])S
22.014 N (\322BaBar )S
-0.659 N (Application Framework\323, David Quarrie. See also David\325)S
-0.659 N (s \336)S
(rst and third )S
126 381 M (lecture in his \322C++ within the BaBar Computing Environment\323 course, and docu-)S
126 395 M (ments available at)S
end
194 0 :M
f3_10 sf
( )S
200 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
126 409 M 0 0 390(http://www.slac.stanford.edu/BF/dist/releases/test/Framework/doc/)FmTx
end
200 0 :M
f0_12 sf
( )S
203 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
126 423 M -0.302(Note that signi\336)W
-0.302(cant work has gone into simplifying this interface, with more to be )W
126 437 M (implemented.)S
90 455 M ([4])S
22.014 N (The example has not yet been ported from the original application framework to )S
126 469 M (the newer version. Contact Bob Jacobsen if you wish to help with this so you can )S
126 483 M (use it.)S
90 501 M ([5])S
22.014 N (\322Access to BaBar Event Data from Reconstruction Code\323, Reconstruction Note 3)S
90 519 M ([6])S
22.014 N (For more information, attend the common reconstruction meetings on alternate )S
126 533 M (Monday mornings and announced in the RECOSOFT)S
-0.214 N ( BFmail group, and sub-)S
126 547 M (scribe to the common reconstruction software )S
-0.214 N (W)S
-0.958 N (eb discussion: )S
end
203 0 :M
f3_10 sf
( )S
209 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
126 561 M 0 0 396(http://www-hep.llnl.gov/HyperNews/get/babardiscuss/recoCommon.html)FmTx
[/CropBox[-18 784 FmDC 594 -8 FmDC]/PAGE FmPD
[/Rect[311 182 325 170]/Border[0 0 0]/Page 5/View[/FitH -18 -152 FmDC exch pop]/LNK FmPD
end
endp
%%Trailer
end		% md
%%EOF
