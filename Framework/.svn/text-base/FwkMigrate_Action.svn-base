#! /bin/sh
#--------------------------------------------------------------------------
#
# FwkMigrate_Action:
#
# This is a script that will do the migrations listed below.
#
#  To use:
#
#     cd <your package>
#     FwkMigrate_Action
#
# If there are no migrations, the program will run silently.
# (You can run it more than once on a package.)
# This script will go into sub-directories and do the migrations.
#
#
# For the list of migrations done by this script, please see the section 
# labelled "*** MIGRATIONS ***" below
#
#
# Author:
# Asoka De Silva (desilva@triumf.ca)
#
# History:
#
#  31 Aug 04 - new script to change how actions are added to the application
#
#--------------------------------------------------------------------------

# The filetypes to search and migrated
ft="*.hh *.cc *.icc *.h *.c *.ddl *.rdl"

#***************************************************************************
doMigrationDescription() {
# define the migrations in a file
# 	$1: file name of the file describing the migrations
#***************************************************************************
#
#                             *** MIGRATIONS ***
#
# syntax : echo "<old> <new> <egrep_old" >> $migfile#
#   where old, new are the migrration to be done with sed
#   and egrep_old is the same expression as old but perhaps with some
#   special chars stripped (to be used by egrep).
#
#
echo "theFramework->actions()->append  theFramework->add theFramework->actions\(\)->append" > $1 
}


#***************************************************************************
countInstances () {
# count the number of instances that the migration has to be done for a file
# args are:
# 	$1: file name containing list of items to migrate
#	$2: file to check for migration
#***************************************************************************
for item in `cat $1` 
do
  count=`egrep -ch $item $2`
  foundInstances=`expr $foundInstances + $count`
done
}


#***************************************************************************
doMigration () {
# do the migration for a file
# args are 
#	$1: file to migrate
#	$2: number of instances to migrate in file
#	$3: script file containing commands for sed	
#***************************************************************************
  echo $1 " will be migrated; " $2 " instances found." &&
  cp $1 ${1}.bak.fwk && 
  sed -f $3 ${1}.bak.fwk > $1 &&
  rm ${1}.bak.fwk
}


#***************************************************************************
# main ()
#***************************************************************************

#[ $# -ne 0 ] && exit
USAGE="cd to your package directory and then run FwkMigrate_Action."
while getopts h scriptArg
do
  case $scriptArg in
     h) echo $USAGE
        exit;;
     \?) echo $USAGE
        exit 2;;
  esac
done

packageDir=`pwd`

# Write, to a file, the migrations ...
migfile=${packageDir}/migrationList
doMigrationDescription $migfile

# write to a script file the commands for the migration
scriptfile=${packageDir}/migrationScript
searchfile=${packageDir}/migrationSearch
awk '{ print "s|"$1"|"$2"|g" }' $migfile > $scriptfile
awk '{ print ""$3"" }' $migfile > $searchfile

# Go through each package/directory and see if there is something to change.
for ftype in $ft
do 
  find . -type f -name $ftype -print | while read fname
  do
    foundInstances=0 &&
    countInstances $searchfile $fname &&
    if [ $foundInstances -gt 0 ]
    then
      doMigration $fname $foundInstances $scriptfile
    fi
  done
done

# cleanup everything
rm $migfile
rm $scriptfile
rm $searchfile

exit




