string(REGEX REPLACE "^.*/([^ ]+)$" "\\1" pkgname ${CMAKE_CURRENT_SOURCE_DIR})

#
# Set specific compiler flags for the package
#
set(${pkgname}_CXX_FLAGS "-Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${${pkgname}_CXX_FLAGS}")

configPkg(${pkgname})

file(GLOB PacDisplay_RDL include/*.rdl) 
foreach(it ${PacDisplay_RDL})
    string(REPLACE ".rdl" ".hh" newstring ${it})
    configure_file(${it} ${newstring} COPYONLY)
endforeach()

#message("rootcint -f ${CMAKE_CURRENT_SOURCE_DIR}/src/PacDisplayCint.cc -c
#-I${CLHEP_INCLUDE_DIR} -I${PROJECT_SOURCE_DIR}/include -I/usr/include
#-I/usr/X11R6/include -I${PROJECT_SOURCE_DIR} -I${ROOT_INCLUDE_DIR}
#-I${ROOT_INCLUDE_DIR}/root -I/usr/X11R6/include -D_GNU_SOURCE
#-D__STD_ALGORITHM -Dregister= -p
#-DCLHEP_TARGET_H=\"CLHEP/config/CLHEP-gcc-3.h\"
#${Headers} ERROR_FILE err.log")

execute_process(COMMAND rootcint -f
${CMAKE_CURRENT_SOURCE_DIR}/src/PacDisplayCint.cc -c
-I${CLHEP_INCLUDE_DIR}
-I${PROJECT_SOURCE_DIR}/include -I/usr/include
-I/usr/X11R6/include -I${PROJECT_SOURCE_DIR}
-I${ROOT_INCLUDE_DIR}
-I${ROOT_INCLUDE_DIR}/root -I/usr/X11R6/include
-D_GNU_SOURCE -D__STD_ALGORITHM -Dregister= -p
-DCLHEP_TARGET_H=\"CLHEP/config/CLHEP-gcc-3.h\"
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispTraj.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacEvtDisplay.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDisplayMacro.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDisplay.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispCluster.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispCone.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispCyl.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispMat.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispPoint.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispRect.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispRing.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispSimHit.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDispTrackTraj.hh
${CMAKE_CURRENT_SOURCE_DIR}/include/PacDisplay_LinkDef.hh
ERROR_FILE err.log)

list(APPEND Sources ${CMAKE_CURRENT_SOURCE_DIR}/src/PacDisplayCint.cc)

#
# Generate library
#
add_library(${pkgname} ${Sources})
target_link_libraries(${pkgname} ${LIB_LINK_LIST})
