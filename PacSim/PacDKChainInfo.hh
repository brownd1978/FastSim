// PacDKChainInfo.hh     03 November 2008
//  revised 23 November 2008
//
//  Mike Sokoloff
//


#include "EvtGenBase/EvtId.hh"
#include "EvtGenBase/EvtParticle.hh"
#include "EvtGenBase/EvtPDL.hh"
#include "EvtGenBase/EvtVector4R.hh"
#include "EvtGenBase/EvtPatches.hh"
#include "EvtGenBase/EvtParticleFactory.hh"
#include "EvtGen/EvtGen.hh"
#include "EvtGenBase/EvtRandom.hh"
#include "EvtGenBase/EvtRandomEngine.hh"
#include "EvtGenBase/EvtReport.hh"
#include "EvtGenBase/EvtSimpleRandomEngine.hh"

#include "PacSim/PacDKPointInfo.hh"

using namespace std;

#ifndef PACDKCHAININFO_HH
#define PACDKCHAININFO_HH

//
// Objects in this class will cache information
// related to how a track decays.
// It is anticipated that the information will
// be generated by a PacDKChainGenerator using
// the set[...] methods or the generateDecay method

//
class PacDKChainInfo {
public:

  // Constructors

  PacDKChainInfo();
  PacDKChainInfo(const PacDKChainInfo&);
  // overload the = operator
  PacDKChainInfo& operator=(const PacDKChainInfo&);

  // Destructors

  virtual ~PacDKChainInfo();


  // Accessors

  const bool decayChainGenerated() const { return _decayChainGenerated;}
  const int  getNDaughters() const { return _theDaughters.size();}
  const std::vector<const EvtParticle *>& getDaughters() const { return _theDaughters;}
  const PacDKPointInfo* getPacDKPointInfo() {return _thePacDKPointInfo;}
  const EvtParticle* getParent() const { return _theParent;}

  //  the following are methods
  //  for setting the values of the data members

  void decayChainInit(const EvtParticle* parent=0);
  void addDaughter(const EvtParticle *);
  

private:

  bool _decayChainGenerated;
  const PacDKPointInfo* _thePacDKPointInfo;
  std::vector<const EvtParticle*>  _theDaughters;
  const EvtParticle* _theParent;

};

#endif  // PacDKChainInfo.hh
