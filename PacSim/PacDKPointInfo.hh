// PacDKPointInfo.hh     26 October 2008
//  revised 23 November 2008
//
// Carol Fabby / Mike Sokoloff
//



#ifndef PACDKPOINTINFO_HH
#define PACDKPOINTINFO_HH

#include "CLHEP/Geometry/HepPoint.h"
#include "PacSim/PacSimTrack.hh"
#include "G3Data/GTrack.hh"
#include "PDT/PdtEntry.hh"

//
// Objects in this class will cache information
// related to where a track decays in space,
// It is anticipated that the information will
// be generated by a PacDKPointGenerator using
// the set[...] methods.
//
class PacDKPointInfo {
public:

  // Constructors

  PacDKPointInfo();
  PacDKPointInfo(const PacDKPointInfo&);
  // overload the = operator
  PacDKPointInfo& operator=(const PacDKPointInfo&);

  // Destructors

  virtual ~PacDKPointInfo();

  // Accessors

  bool mightDecayInDetector() const;
  bool decaysInDetector() const;
  double properDecayLength() const;
  int decayHitIndex() const;
  const HepPoint& decayPoint() const;
  const Hep3Vector& decayDirection() const;
  Hep3Vector decayPoint3Mom() const;
  double decayPointMom() const;
  double decayFltLen() const;
  const PdtEntry* pdtEntry() const;


  //  the following are methods 
  //  for setting the values of the data members

  void setPdtEntry(const PdtEntry* pdtEntry);
  void setMightDecayInDetector(bool truthVal);
  void setDecaysInDetector(bool truthVal);
  void setProperDecayLength(double decayLength);
  void setDecayHitIndex(int index);
  void setDecayPoint(HepPoint decayPoint);
  void setDecayDirection(Hep3Vector decayDirection);
  void setDecayPointMom(double momMagnitude);
  void setDecayFltLen(double fltlen);


private:

  const PdtEntry* _pdtEntry;
  bool _mightDecayInDetector;
  bool _decaysInDetector;
  double _properDecayLength;
  int _decayHitIndex;
  HepPoint _decayPoint;
  Hep3Vector _decayDirection;
  double _decayPointMom;
  double _decayFltLen;


};

#endif   //PacDKPointInfo.hh
