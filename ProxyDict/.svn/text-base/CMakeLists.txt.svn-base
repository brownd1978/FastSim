string(REGEX REPLACE "^.*/([^ ]+)$" "\\1" pkgname ${CMAKE_CURRENT_SOURCE_DIR})

#
# Set specific compiler flags for the package
#
set(${pkgname}_CXX_FLAGS "-Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${${pkgname}_CXX_FLAGS}")

configPkg(${pkgname})

if(NOT($ENV{SBARCH} MATCHES "MacOSX"))
  list(APPEND LIB_LINK_LIST rt)
endif()

list(REMOVE_ITEM Sources 
${CMAKE_CURRENT_SOURCE_DIR}/src/IfdNoCompileTest.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/IfdSimpleProxyDictSpeedTest.cc)

#
# Generate library
#
add_library(${pkgname} ${Sources})
target_link_libraries(${pkgname} ${LIB_LINK_LIST})

add_executable(AbsArgTest test/AbsArgTest.cc test/IfdTestClasses.cc)
target_link_libraries(AbsArgTest ${BIN_LINK_LIST})
add_test(tAbsArgTest ${EXECUTABLE_OUTPUT_PATH}/AbsArgTest)

add_executable(IfdHepAListTest test/IfdHepAListTest.cc test/IfdTestClasses.cc)
target_link_libraries(IfdHepAListTest ${BIN_LINK_LIST})
add_test(tIfdHepAListTest ${EXECUTABLE_OUTPUT_PATH}/IfdHepAListTest)

add_executable(IfdKeyTest test/IfdKeyTest.cc test/IfdTestClasses.cc)
target_link_libraries(IfdKeyTest ${BIN_LINK_LIST})
add_test(tIfdKeyTest ${EXECUTABLE_OUTPUT_PATH}/IfdKeyTest)

add_executable(IfdSimpleProxyDictTest test/IfdSimpleProxyDictTest.cc
test/IfdTestClasses.cc)
target_link_libraries(IfdSimpleProxyDictTest ${BIN_LINK_LIST})
add_test(tIfdSimpleProxyDictTest ${EXECUTABLE_OUTPUT_PATH}/IfdSimpleProxyDictTest)

add_executable(IfdTypeKeyTest test/IfdTypeKeyTest.cc test/IfdTestClasses.cc)
target_link_libraries(IfdTypeKeyTest ${BIN_LINK_LIST})
add_test(tIfdTypeKeyTest ${EXECUTABLE_OUTPUT_PATH}/IfdTypeKeyTest)
